{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","message","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAAwB,IAAD,OACrBJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAbxC,oBAiBE,WACE,IAAQL,EAAeO,KAAKR,MAApBC,WACFQ,EAAUR,EAAU,mCAA+BA,EAA/B,KAA+C,0BAEzE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BD,UAvBrC,GAAyBE,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.f3eb8d31.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface Clock {\n  pressedKey: string | null;\n}\n\nexport class App extends Component<{}, Clock> {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n    const message = pressedKey ? `The last pressed key is [${pressedKey}]` : 'Nothing was pressed yet';\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}